Title: sicp 1.3.2
Slug: sicp-1-3-2
Date: 2014-10-08 20:50:08 
Modified: 2014-10-08 20:50:08 
Category: blog
Tags: sicp

* 练习1.34

采用替换模型进行分析:
``` Scheme
(define (f g) (g 2))
```
如果需要求值:
``` Scheme
(f f)
```
采用替换模型替换为:
``` Scheme
(f 2)
```
进一步替换为:
``` Scheme
(2 2)
```
由于2不是一个可以调用的过程，最终求值(f f)会导致运行时错误。

* 练习1.35

``` Scheme
(fixed-point (lambda(x) (+ 1 (/ 1 x)))
             1.0)
```

* 练习1.36

``` Scheme
(define (fixed-point f first-guest)
  (define (close-enough? v1 v2)
    (< (abs (- v1 v2)) tolerance))
  (define (try guess)
    (display guess)
    (newline)
    (let ((next (f guess))
          )
      (if (close-enough? guess next)
          next
          (try next))))
  (try first-guest))
```

* 练习1.37

``` Scheme
(define (cont-frac n d k)
  (if (= k 1)
      (/ (n k) (d k))
      (/ (n k) (+ (d k) (cont-frac n d (- k 1))))))

(define (cont-frac-iter n d k)
  (define (iter k result)
    (if (= k 1)
        result
        (iter (- k 1)
              (/ (n k) (+ (d k) result)))))
  (iter k 0))
```
